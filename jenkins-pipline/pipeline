pipeline {
    agent any
    
    stages {
        stage('preparation') {
            steps {
                 git branch: 'master',  url: 'https://github.com/ayaabdo/Terraform-pipeline-with-jenkins.git'

            }
        }
        stage('init') {
            steps {
                 withCredentials([ [ $class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'my-key', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'] ]) {
                    sh 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'
                    sh 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                    sh 'terraform version'
                    
              }
            }
        }
        stage('create dev workspace') {
            steps {
                 withCredentials([ [ $class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'my-key', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'] ]) {
                    sh 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'
                    sh 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                     sh 'terraform workspace new dev'
                     sh 'terraform workspace new prod'
                 }
            }
        }
        stage('run dev env') {
            when {
                expression {params.workspace == 'dev'}
               }
            steps {
                 withCredentials([ [ $class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'my-key', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'] ]) {
                     sh 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'
                     sh 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                     sh 'terraform workspace select dev'
                     sh 'terraform apply --var-file=dev.tfvars -auto-approve'
                 }
            }
        }
        stage('run prod env') {
            when {
                expression {params.workspace == 'prod'}
               }
            steps {
                 withCredentials([ [ $class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'my-key', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'] ]) {
                    sh 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'
                    sh 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                    sh 'terraform workspace select prod'
                    sh 'terraform apply --var-file=prod.tfvars -auto-approve'
                 }
            }
        }
        stage('destroy dev env') {
            when {
                expression {params.workspace == 'destroy-dev'}
               }
            steps {
                 withCredentials([ [ $class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'my-key', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'] ]) {
                    sh 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'
                    sh 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                    sh 'terraform workspace select dev'
                    sh 'terraform destroy --var-file=dev.tfvars -auto-approve'
                 }
            }
        }
        stage('destroy prod env') {
            when {
                expression {params.workspace == 'destroy-prod'}
               }
            steps {
                 withCredentials([ [ $class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'my-key', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'] ]) {
                    sh 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'
                    sh 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                    sh 'terraform workspace select prod'
                    sh 'terraform destroy --var-file=prod.tfvars -auto-approve'
                 }
            }
        }
    }
}